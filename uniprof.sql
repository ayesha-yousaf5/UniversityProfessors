CREATE TABLE UNIVERSITY_PROFESSORS (
	FIRSTNAME VARCHAR(64),
	LASTNAME VARCHAR(64),
	UNIVERSITY VARCHAR(255),
	UNIVERSITY_SHORTNAME CHAR(3),
	UNIVERSITY_CITY VARCHAR(255),
	FUNCTION VARCHAR(255),
	ORGANIZATION VARCHAR(255),
	ORGANIZATION_SECTOR VARCHAR(255)
);

-- Create a table for the universities entity type
CREATE TABLE PROFESSORS (
	FIRSTNAME VARCHAR(64),
	LASTNAME VARCHAR(64),
	UNIVERSITY_SHORTNAME CHAR(3)
);

CREATE TABLE UNIVERSITIES (
	UNIVERSITY_SHORTNAME CHAR(3),
	UNIVERSITY VARCHAR(255),
	UNIVERSITY_CITY VARCHAR(255)
);

CREATE TABLE AFFILIATIONS (
	FIRSTNAME VARCHAR(64),
	LASTNAME VARCHAR(64),
	FUNCTION VARCHAR(255),
	ORGANIZATION VARCHAR(255)
)
CREATE TABLE ORGANIZATIONS (
	ORGANIZATION VARCHAR(255),
	ORGANIZATION_SECTOR VARCHAR(255)
)
INSERT INTO
	PROFESSORS
SELECT DISTINCT
	FIRSTNAME,
	LASTNAME,
	UNIVERSITY_SHORTNAME
FROM
	UNIVERSITY_PROFESSORS;

SELECT
	*
FROM
	PROFESSORS;

INSERT INTO
	AFFILIATIONS
SELECT DISTINCT
	FIRSTNAME,
	LASTNAME,
	FUNCTION,
	ORGANIZATION
FROM
	UNIVERSITY_PROFESSORS;

SELECT
	*
FROM
	AFFILIATIONS;

INSERT INTO
	ORGANIZATIONS
SELECT DISTINCT
	ORGANIZATION,
	ORGANIZATION_SECTOR
FROM
	UNIVERSITY_PROFESSORS;

SELECT
	*
FROM
	ORGANIZATIONS;

INSERT INTO
	UNIVERSITIES
SELECT DISTINCT
	UNIVERSITY_SHORTNAME,
	UNIVERSITY,
	UNIVERSITY_CITY
FROM
	UNIVERSITY_PROFESSORS;

SELECT
	*
FROM
	UNIVERSITIES;

ALTER TABLE PROFESSORS
ALTER COLUMN FIRSTNAME
SET NOT NULL;

ALTER TABLE PROFESSORS
ALTER COLUMN LASTNAME
SET NOT NULL;

ALTER TABLE UNIVERSITIES
ADD CONSTRAINT UNIVERSITY_SHORTNAME_UNQ UNIQUE (UNIVERSITY_SHORTNAME);

ALTER TABLE ORGANIZATIONS
ADD CONSTRAINT ORGANIZATION_UNQ UNIQUE (ORGANIZATION);

ALTER TABLE ORGANIZATIONS
RENAME COLUMN ORGANIZATION TO ID;

ALTER TABLE ORGANIZATIONS
ADD CONSTRAINT ORGANIZATION_PK PRIMARY KEY (ID);

ALTER TABLE UNIVERSITIES
RENAME COLUMN UNIVERSITY_SHORTNAME TO ID;

ALTER TABLE UNIVERSITIES
ADD CONSTRAINT UNIVERSITY_PK PRIMARY KEY (ID);

ALTER TABLE PROFESSORS
ADD COLUMN ID SERIAL;

-- Make id a primary key
ALTER TABLE PROFESSORS
ADD CONSTRAINT PROFESSORS_PKEY PRIMARY KEY (ID);

-- Rename the university_shortname column
ALTER TABLE PROFESSORS
RENAME COLUMN UNIVERSITY_SHORTNAME TO UNIVERSITY_ID;

-- Add a foreign key on professors referencing universities
ALTER TABLE PROFESSORS
ADD CONSTRAINT PROFESSORS_FKEY FOREIGN KEY (UNIVERSITY_ID) REFERENCES UNIVERSITIES (ID);

ALTER TABLE AFFILIATIONS
ADD COLUMN PROFESSOR_ID INTEGER REFERENCES PROFESSORS (ID);

ALTER TABLE AFFILIATIONS
RENAME ORGANIZATION TO ORGANIZATION_ID;

ALTER TABLE AFFILIATIONS
ADD CONSTRAINT AFFILIATIONS_ORGANIZATION_FKEY FOREIGN KEY (ORGANIZATION_ID) REFERENCES ORGANIZATIONS (ID);

-- Update professor_id to professors.id where firstname, lastname correspond to rows in professors
UPDATE AFFILIATIONS
SET
	PROFESSOR_ID = PROFESSORS.ID
FROM
	PROFESSORS
WHERE
	AFFILIATIONS.FIRSTNAME = PROFESSORS.FIRSTNAME
	AND AFFILIATIONS.LASTNAME = PROFESSORS.LASTNAME;

SELECT
	*
FROM
	AFFILIATIONS
LIMIT
	10;

-- Drop the firstname column
ALTER TABLE AFFILIATIONS
DROP COLUMN FIRSTNAME;

-- Drop the lastname column
ALTER TABLE AFFILIATIONS
DROP COLUMN LASTNAME;

ALTER TABLE AFFILIATIONS
DROP CONSTRAINT AFFILIATIONS_ORGANIZATION_FKEY;

-- Add a new foreign key constraint from affiliations to organizations which cascades deletion
ALTER TABLE AFFILIATIONS
ADD CONSTRAINT AFFILIATIONS_ORGANIZATION_ID_FKEY FOREIGN KEY (ORGANIZATION_ID) REFERENCES ORGANIZATIONS (ID) ON DELETE CASCADE;

SELECT
	*
FROM
	PROFESSORS;

SELECT
	*
FROM
	ORGANIZATIONS;

SELECT
	*
FROM
	AFFILIATIONS;

SELECT
	*
FROM
	UNIVERSITIES;
